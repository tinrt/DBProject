-- Generated by Oracle SQL Developer Data Modeler 24.3.1.347.1153
--   at:        2025-04-28 21:14:38 EDT
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



CREATE USER betsyncdb IDENTIFIED BY account

unlock;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE betsyncdb.admin (
    admin_id      NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    username      VARCHAR2(50 BYTE) NOT NULL,
    password_hash VARCHAR2(100 BYTE) NOT NULL
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.admin
    ADD CONSTRAINT admin_pk
        PRIMARY KEY ( admin_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE betsyncdb.admin
    ADD CONSTRAINT admin_username_un
        UNIQUE ( username )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.bet (
    bet_id           NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    player_id        NUMBER,
    match_id         NUMBER,
    odds_id          NUMBER,
    bet_type         VARCHAR2(20 BYTE),
    bet_amount       NUMBER(10, 2),
    potential_payout NUMBER(10, 2),
    bet_status       VARCHAR2(20 BYTE),
    time_placed      TIMESTAMP DEFAULT systimestamp
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.bet
    ADD
        CHECK ( bet_status IN ( 'canceled', 'lost', 'pending', 'won' ) );

ALTER TABLE betsyncdb.bet
    ADD CONSTRAINT bet_pk
        PRIMARY KEY ( bet_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.matchgame (
    match_id       NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    team_1         NUMBER,
    team_2         NUMBER,
    admin_id       NUMBER,
    match_date     DATE,
    status         VARCHAR2(20 BYTE),
    final_score    VARCHAR2(20 BYTE),
    match_location VARCHAR2(100 BYTE)
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.matchgame
    ADD
        CHECK ( status IN ( 'finished', 'live', 'upcoming' ) );

ALTER TABLE betsyncdb.matchgame
    ADD CONSTRAINT matchgame_pk
        PRIMARY KEY ( match_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.odds (
    odds_id     NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    match_id    NUMBER,
    admin_id    NUMBER,
    team_1_odds NUMBER(5, 2),
    team_2_odds NUMBER(5, 2),
    draw_odds   NUMBER(5, 2),
    odds_date   DATE DEFAULT sysdate
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.odds
    ADD CONSTRAINT odds_pk
        PRIMARY KEY ( odds_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.player (
    player_id     NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    username      VARCHAR2(50 BYTE) NOT NULL,
    fname         VARCHAR2(50 BYTE),
    lname         VARCHAR2(50 BYTE),
    email         VARCHAR2(100 BYTE) NOT NULL,
    password_hash VARCHAR2(100 BYTE) NOT NULL,
    balance       NUMBER(10, 2) DEFAULT 0,
    date_joined   DATE DEFAULT sysdate,
    date_of_birth DATE
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.player
    ADD CONSTRAINT player_pk
        PRIMARY KEY ( player_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE betsyncdb.player
    ADD CONSTRAINT player_username_un
        UNIQUE ( username )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE betsyncdb.player
    ADD CONSTRAINT player_email_un
        UNIQUE ( email )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.player_transaction (
    transaction_id   NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    player_id        NUMBER,
    amount           NUMBER(10, 2),
    transaction_type VARCHAR2(20 BYTE),
    transaction_date DATE DEFAULT sysdate,
    transaction_time TIMESTAMP DEFAULT systimestamp,
    status           VARCHAR2(20 BYTE)
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.player_transaction
    ADD
        CHECK ( transaction_type IN ( 'bet', 'deposit', 'withdrawal' ) );

ALTER TABLE betsyncdb.player_transaction
    ADD CONSTRAINT player_transaction_pk
        PRIMARY KEY ( transaction_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.sport (
    sport_id   NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    sport_name VARCHAR2(30 BYTE) NOT NULL
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.sport
    ADD CONSTRAINT sport_pk
        PRIMARY KEY ( sport_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE betsyncdb.sport
    ADD CONSTRAINT sport_sport_name_un
        UNIQUE ( sport_name )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE betsyncdb.team (
    team_id   NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    sport_id  NUMBER,
    team_name VARCHAR2(100 BYTE)
)
PCTFREE 10
PCTUSED 40
TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE betsyncdb.team
    ADD CONSTRAINT team_pk
        PRIMARY KEY ( team_id )
            USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE users
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE betsyncdb.team
    ADD
        FOREIGN KEY ( sport_id )
            REFERENCES betsyncdb.sport ( sport_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.matchgame
    ADD
        FOREIGN KEY ( team_1 )
            REFERENCES betsyncdb.team ( team_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.matchgame
    ADD
        FOREIGN KEY ( team_2 )
            REFERENCES betsyncdb.team ( team_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.matchgame
    ADD
        FOREIGN KEY ( admin_id )
            REFERENCES betsyncdb.admin ( admin_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.odds
    ADD
        FOREIGN KEY ( match_id )
            REFERENCES betsyncdb.matchgame ( match_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.odds
    ADD
        FOREIGN KEY ( admin_id )
            REFERENCES betsyncdb.admin ( admin_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.bet
    ADD
        FOREIGN KEY ( player_id )
            REFERENCES betsyncdb.player ( player_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.bet
    ADD
        FOREIGN KEY ( match_id )
            REFERENCES betsyncdb.matchgame ( match_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.bet
    ADD
        FOREIGN KEY ( odds_id )
            REFERENCES betsyncdb.odds ( odds_id )
            NOT DEFERRABLE;

ALTER TABLE betsyncdb.player_transaction
    ADD
        FOREIGN KEY ( player_id )
            REFERENCES betsyncdb.player ( player_id )
            NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER BETSYNCDB.CHECK_BALANCE_BEFORE_INSERT 
    BEFORE INSERT OR UPDATE ON BETSYNCDB.BET 
    FOR EACH ROW 
DECLARE
    v_balance Player.balance%TYPE;
BEGIN
    -- Get Players current salary
    SELECT balance 
    INTO v_balance
    FROM Player
    WHERE player_id = :NEW.player_id;

    -- Raise an error if the bet amount is more than the balance
    IF :NEW.bet_amount > v_balance THEN
        RAISE_APPLICATION_ERROR(-20100, 'Insuffient funds to place bet.');
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20101, 'Player not found.');
    WHEN OTHERS THEN
        RAISE;
END; 
/

CREATE OR REPLACE TRIGGER BETSYNCDB.CHECK_MATCH_DATE 
    BEFORE INSERT ON BETSYNCDB.BET 
    FOR EACH ROW 
DECLARE
    v_match_date MatchGame.match_date%TYPE;
BEGIN

    -- Get match date
    SELECT match_date INTO v_match_date
    FROM MatchGame
    WHERE match_id = :NEW.match_id;

    -- Check if match date passed
    IF SYSDATE > v_match_date THEN
        RAISE_APPLICATION_ERROR(-20103, 'Match has already passed.');
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE;
END; 
/

CREATE OR REPLACE TRIGGER BETSYNCDB.CHECK_PLAYER_AGE 
    BEFORE INSERT OR UPDATE ON BETSYNCDB.PLAYER 
    FOR EACH ROW 
BEGIN

    IF ADD_MONTHS(:NEW.date_of_birth, 12 * 21) > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20102, 'Player is not 21 or older.');
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE;
END; 
/

CREATE OR REPLACE TRIGGER BETSYNCDB.CHECKBALANCEBEFOREWITHDRAWAL 
    BEFORE INSERT ON BETSYNCDB.PLAYER_TRANSACTION 
    FOR EACH ROW 
DECLARE
    v_balance NUMBER(10,2);
BEGIN
    SELECT balance INTO v_balance
    FROM Player
    WHERE player_id = :new.player_id;

    IF :new.transaction_type = 'withdrawal' THEN
        IF :new.amount > v_balance THEN
            RAISE_APPLICATION_ERROR(-20002, 'Insufficient balance for withdrawal.');
        END IF;
    END IF;
END; 
/

CREATE OR REPLACE TRIGGER BETSYNCDB.CHECKMATCHBEFOREBETINSERT 
    BEFORE INSERT ON BETSYNCDB.BET 
    FOR EACH ROW 
DECLARE
    v_match_exists INT;
BEGIN
    SELECT COUNT(*) INTO v_match_exists
    FROM MatchGame
    WHERE match_id = :NEW.match_id;

    IF v_match_exists = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Match with ID ' || :NEW.match_id || ' does not exist.');
    END IF;
END; 
/

CREATE OR REPLACE TRIGGER BETSYNCDB.UPDATEBALANCEAFTERTRANSACTION 
    AFTER INSERT ON BETSYNCDB.PLAYER_TRANSACTION 
    FOR EACH ROW 
DECLARE
BEGIN
  IF :new.transaction_type = 'deposit' THEN
    UPDATE Player
    SET balance = balance + :new.amount
    WHERE player_id = :new.player_id;

  ELSIF :new.transaction_type = 'withdrawal' OR :new.transaction_type = 'bet' THEN
    UPDATE Player
    SET balance = balance - :new.amount
    WHERE player_id = :new.player_id;
  END IF;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
